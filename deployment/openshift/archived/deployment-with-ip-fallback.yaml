apiVersion: apps/v1
kind: Deployment
metadata:
  name: nanopore-tracking-app
  namespace: dept-barc
  labels:
    app: nanopore-tracking-app
    version: "1.0"
    component: frontend
spec:
  replicas: 2
  selector:
    matchLabels:
      app: nanopore-tracking-app
  template:
    metadata:
      labels:
        app: nanopore-tracking-app
        service-mesh: enabled
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "9090"
        prometheus.io/path: "/metrics"
    spec:
      initContainers:
      - name: setup-storage
        image: busybox:1.35
        command: ['sh', '-c', 'mkdir -p /app/storage && chmod 755 /app/storage']
        volumeMounts:
        - name: storage-volume
          mountPath: /app/storage
      containers:
      - name: nanopore-tracking-app
        image: image-registry.openshift-image-registry.svc:5000/dept-barc/nanopore-tracking-app:latest
        ports:
        - containerPort: 3001
          name: http
        - containerPort: 9090
          name: metrics
        env:
        # Database configuration
        - name: DATABASE_URL
          valueFrom:
            secretKeyRef:
              name: nanopore-secrets
              key: database-url
        - name: DATABASE_IP
          value: "172.30.29.148"
        
        # Service discovery with IP fallback
        - name: SUBMISSION_SERVICE_URL
          value: "http://submission-service.dept-barc.svc.cluster.local:8000"
        - name: SUBMISSION_SERVICE_IP
          value: "172.30.47.35"
        - name: SUBMISSION_SERVICE_PORT
          value: "8000"
        
        - name: AI_SERVICE_URL
          value: "http://ai-service-optimized.dept-barc.svc.cluster.local:8001"
        - name: AI_SERVICE_IP
          value: ""  # Will be populated when AI service is stable
        - name: AI_SERVICE_PORT
          value: "8001"
        
        # Service client configuration
        - name: SERVICE_CLIENT_TIMEOUT
          value: "10000"
        - name: SERVICE_CLIENT_RETRIES
          value: "3"
        - name: SERVICE_CLIENT_RETRY_DELAY
          value: "1000"
        - name: SERVICE_CLIENT_CIRCUIT_BREAKER_THRESHOLD
          value: "5"
        - name: SERVICE_CLIENT_CIRCUIT_BREAKER_TIMEOUT
          value: "60000"
        - name: SERVICE_CLIENT_HEALTH_CHECK_INTERVAL
          value: "30000"
        
        # DNS configuration
        - name: DNS_FALLBACK_ENABLED
          value: "true"
        - name: DNS_TIMEOUT
          value: "5000"
        
        # Application configuration
        - name: NODE_ENV
          value: "production"
        - name: PORT
          value: "3001"
        - name: OLLAMA_URL
          value: "http://ollama.dept-barc.svc.cluster.local:11434"
        
        # Monitoring and logging
        - name: ENABLE_METRICS
          value: "true"
        - name: LOG_LEVEL
          value: "info"
        - name: STRUCTURED_LOGGING
          value: "true"
        
        resources:
          requests:
            memory: "256Mi"
            cpu: "100m"
          limits:
            memory: "384Mi"
            cpu: "200m"
        
        # Health checks
        livenessProbe:
          httpGet:
            path: /health
            port: 3001
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        
        readinessProbe:
          httpGet:
            path: /health
            port: 3001
          initialDelaySeconds: 10
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 2
        
        # Volume mounts
        volumeMounts:
        - name: storage-volume
          mountPath: /app/storage
        - name: config-volume
          mountPath: /app/config
          readOnly: true
        
        # Security context
        securityContext:
          runAsNonRoot: true
          runAsUser: 1001
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: false
          capabilities:
            drop:
            - ALL
      
      # Pod security and DNS configuration
      dnsPolicy: ClusterFirst
      dnsConfig:
        options:
        - name: ndots
          value: "2"
        - name: edns0
        - name: timeout
          value: "5"
        - name: attempts
          value: "3"
      
      # Service account
      serviceAccountName: nanopore-tracking-app
      
      # Volumes
      volumes:
      - name: storage-volume
        persistentVolumeClaim:
          claimName: nanopore-storage-pvc
      - name: config-volume
        configMap:
          name: nanopore-config
      
      # Pod placement
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - nanopore-tracking-app
              topologyKey: kubernetes.io/hostname
      
      # Tolerations for resource constraints
      tolerations:
      - key: "node.kubernetes.io/memory-pressure"
        operator: "Exists"
        effect: "NoSchedule"
      - key: "node.kubernetes.io/disk-pressure"
        operator: "Exists"
        effect: "NoSchedule"
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: nanopore-config
  namespace: dept-barc
  labels:
    app: nanopore-tracking-app
data:
  service-discovery.json: |
    {
      "services": {
        "submission-service": {
          "hostname": "submission-service.dept-barc.svc.cluster.local",
          "ip": "172.30.47.35",
          "port": 8000,
          "protocol": "http",
          "healthPath": "/api/v1/health",
          "timeout": 5000,
          "retries": 3
        },
        "ai-service": {
          "hostname": "ai-service-optimized.dept-barc.svc.cluster.local",
          "ip": "",
          "port": 8001,
          "protocol": "http",
          "healthPath": "/health",
          "timeout": 5000,
          "retries": 3
        },
        "database": {
          "hostname": "sequencing-consultant.dept-barc.svc.cluster.local",
          "ip": "172.30.29.148",
          "port": 5432,
          "protocol": "tcp",
          "healthPath": "",
          "timeout": 10000,
          "retries": 5
        }
      },
      "fallback": {
        "enabled": true,
        "strategy": "ip-first",
        "dnsTimeout": 5000,
        "circuitBreaker": {
          "threshold": 5,
          "timeout": 60000,
          "monitoringPeriod": 60000
        }
      }
    }
  
  monitoring.json: |
    {
      "healthChecks": {
        "enabled": true,
        "interval": 30000,
        "timeout": 5000,
        "endpoints": [
          "/health",
          "/api/service-health"
        ]
      },
      "metrics": {
        "enabled": true,
        "port": 9090,
        "path": "/metrics",
        "collectInterval": 15000
      },
      "logging": {
        "level": "info",
        "structured": true,
        "includeServiceHealth": true
      }
    } 