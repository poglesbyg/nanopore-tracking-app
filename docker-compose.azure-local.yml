version: '3.8'

services:
  # PostgreSQL Database (simulating Azure Database for PostgreSQL)
  postgres:
    image: postgres:14
    environment:
      POSTGRES_USER: nanopore_admin
      POSTGRES_PASSWORD: NanoporeP@ss2024!
      POSTGRES_DB: nanopore_tracking
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U nanopore_admin"]
      interval: 5s
      timeout: 5s
      retries: 5

  # Main Application (simulating AKS deployment)
  app:
    build: .
    ports:
      - "3001:3001"
    environment:
      NODE_ENV: production
      DATABASE_URL: postgresql://nanopore_admin:NanoporeP@ss2024!@postgres:5432/nanopore_tracking?sslmode=disable
      JWT_SECRET: your-jwt-secret-here
      SESSION_SECRET: your-session-secret-here
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./uploads:/app/uploads
    restart: unless-stopped

  # Sample Management MCP Server (if exists)
  mcp-sample-management:
    build: ./services/mcp-servers/sample-management
    ports:
      - "8081:8080"
    environment:
      DATABASE_URL: postgresql://nanopore_admin:NanoporeP@ss2024!@postgres:5432/nanopore_tracking?sslmode=disable
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped

  # Nanopore Domain MCP Server (if exists)
  mcp-nanopore-domain:
    build: ./services/mcp-servers/nanopore-domain
    ports:
      - "8082:8080"
    environment:
      DATABASE_URL: postgresql://nanopore_admin:NanoporeP@ss2024!@postgres:5432/nanopore_tracking?sslmode=disable
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped

  # NGINX as Load Balancer (simulating Azure Load Balancer)
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./deployment/azure/nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - app
    restart: unless-stopped

volumes:
  postgres_data: 